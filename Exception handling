1. Exception: Là cơ chế xử lý lỗi trong chương trình
Cú pháp:
try {
   // statements causing exception
} catch( ExceptionName e1 ) {
   // error handling code
} catch( ExceptionName e2 ) {
   // error handling code
} catch( ExceptionName eN ) {
   // error handling code
} finally {
   // statements to be executed
}Khối lệnh
}
catch(exception){
  Khối lệnh xử lý lỗi
}
Ví dụ: 
try
      {
        int[] myNumbers = {1, 2, 3};
        Console.WriteLine(myNumbers[10]);
      }
      catch (Exception e)
      {
        Console.WriteLine(e.Message);
      }   
Chương trình khai báo mảng có 3 phần tử, lệnh truy xuất myNumbers[10] bị lỗi vì vượt quá phạm vi của mảng => Khối lệnh trong catch được thực hiện và xuất hiện thông báo lỗi
2. Một số lớp exception trong C#
System.IO.IOException
System.IndexOutOfRangeException
System.ArrayTypeMismatchException
System.NullReferenceException
System.DivideByZeroException
System.InvalidCastException
System.OutOfMemoryException
System.StackOverflowException

2. Ví dụ:
using System;

namespace DivisionZeroExample
{
  class DivNumbers{
  	float result;
    public DivNumbers(){
    	result=0;
    }
    public void division(int a, int b){
    	try{
        	result = a/b;
        }catch(DivideByZeroException e){
        	Console.WriteLine("Thông báo lỗi: {0}", e);
        }finally{
        	Console.WriteLine("Kết quả: {0}", result);
        }
        
    }
  }
  
  class Program
  {
    static void Main(string[] args)
    {
    	DivNumbers div = new DivNumbers();
        div.division(25,0);
    }
  }
}
3. 
